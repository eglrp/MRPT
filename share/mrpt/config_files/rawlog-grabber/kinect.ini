// ------------------------------------------------------------
//  Config file for the "rawlog-grabber" application
// ------------------------------------------------------------

//  Each section [XXXXX] (but [global]) setups a thread in the rawlog-grabber
//   standalone application. Each thread collects data from some
//   sensor or device, then the main thread groups and orders them before
//   streaming everything to a rawlog file.
//
//  The name of the sections will become the sensor label. The driver for
//   each sensor is actually determined by the field "driver", which must
//   match the name of some class in HWDRIVERS implementing CGenericSensor.


// =======================================================
//  Section: Global settings to the application
//   
// =======================================================
[global]
// The prefix can contain a relative or absolute path.
// The final name will be <PREFIX>_date_time.rawlog
rawlog_prefix		= ./data_kinect

// Milliseconds between thread launches
time_between_launches	= 1000

use_sensoryframes	= 0

GRABBER_PERIOD_MS	= 1000

// ** IMPORTANT **: When grabbing from a 3D camera, disable GZ compression to avoid 
// a bottleneck compressing the 3D point clouds in real-time!
rawlog_GZ_compress_level  = 0   // 0: No compress, 1: fastest (default), 9: best 

// =======================================================
//  SENSOR: Kinect
//   
// =======================================================
[Kinect]
// ** IMPORTANT **: See the note on "rawlog_GZ_compress_level" above
driver                         = CKinect
process_rate                   = 200		// Hz (max)

grab_decimation                = 4    // Grab 1 out of N only.

sensorLabel  = KINECT         // A text description
preview_window  = true        // Show a window with a preview of the grabbed data in real-time

device_number   = 0           // Device index to open (0:first Kinect, 1:second Kinect,...)

grab_image      = true        // Grab the RGB image channel? (Default=true)
grab_depth      = true        // Grab the depth channel? (Default=true)
grab_3D_points  = true        // Grab the 3D point cloud? (Default=true) If disabled, points can be generated later on.
grab_IMU        = true        // Grab the accelerometers? (Default=true)

video_channel   = VIDEO_CHANNEL_RGB // Optional. Can be: VIDEO_CHANNEL_RGB (default) or VIDEO_CHANNEL_IR

// Calibration matrix of the RGB camera:
rgb_cx        = 328.9427     // (cx,cy): Optical center, pixels
rgb_cy        = 267.4807
rgb_fx        = 529.2151     // (fx,fy): Focal distance, pixels
rgb_fy        = 525.5639

// Calibration matrix of the Depth camera:
d_cx          = 339.3078     // (cx,cy): Optical center, pixels
d_cy          = 242.7391
d_fx          = 594.2143     // (fx,fy): Focal distance, pixels
d_fy          = 591.0405

// The relative pose of the RGB camera wrt the depth camera.
//  (See mrpt::slam::CObservation3DRangeScan for a 3D diagram of this pose)
relativePoseIntensityWRTDepth  =  [0 -0.02 0 -90 0 -90]   //  [x(m) y(m) z(m) yaw(deg) pitch(deg) roll(deg)]

// Optional: Set the initial tilt angle of Kinect: upon initialization, the motor is sent a command to 
//            rotate to this angle (in degrees). Note: You must be aware of the tilt when interpreting the sensor readings.
initial_tilt_angle = 0


pose_x                         = 0	// Camera position on the robot (meters)
pose_y                         = 0
pose_z                         = 0
pose_yaw                       = 0	// Angles in degrees
pose_pitch                     = 0
pose_roll                      = 0

